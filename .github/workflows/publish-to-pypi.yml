name: PyPI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

  Source:
    name: Source

    steps:
    - uses: '${{ github.repository }}/.github/workflows/system-setup@${{ github.sha }}'
      with:
        packaging-tools: true

    - name: Install package
      run: |
        pip install -e .

    - name: ðŸš§ Build distribution ðŸ“¦
      run: |
        python setup.py sdist

    - name: Check distribution ðŸ“¦
      run: |
        twine check dist/*

    - name: ðŸ“¤ Publish source to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      if: env.TWINE_PASSWORD != null
      run: |
        twine upload --skip-existing --verbose --repository testpypi dist/*.tar.gz

    - name: ðŸ“¤ Publish source to PyPI
      if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'SymbiFlow/fasm'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*

  Linux:
    strategy:
      matrix:
        include:
          - { python-version: '3.6', manylinux-python: 'cp36-cp36m' }
          - { python-version: '3.7', manylinux-python: 'cp37-cp37m' }
          - { python-version: '3.8', manylinux-python: 'cp38-cp38' }
          - { python-version: '3.9', manylinux-python: 'cp39-cp39' }
      fail-fast: false

    name: '${{ matrix.name }} â€¢ manylinux'

    steps:
    - uses: '${{ github.repository }}/.github/workflows/system-setup@${{ github.sha }}'
      with:
        python-version: ${{ matrix.python-version }}
        packaging-tools: true

    - name: ðŸš§ Build distribution ðŸ“¦
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        build-requirements: 'cython'
        pre-build-command: 'bash .github/workflows/manylinux-install-cmake.sh'
        python-versions: ${{ matrix.manylinux-python }}
        #pip-wheel-args: '-w ./dist --no-deps --verbose'

    - name: List distribution ðŸ“¦
      run: |
        # Fix permissions
        echo "::group::Fixing permission"
        ls -l dist/*
        echo $USER
        whoami
        sudo chown -R $USER dist
        ls -l dist/*
        echo "::endgroup::"
        # Remove the non-manylinux versions
        rm -v dist/*linux_x86_64*.whl
        ls -l dist/*

    - name: Check distribution ðŸ“¦
      run: |
        for WHEEL in dist/*.whl; do
          echo
          echo "::group::Checking $WHEEL"
          echo
          python -m zipfile --list $WHEEL
          echo
          auditwheel show $WHEEL
          echo
          twine check $WHEEL
          echo
          echo "::endgroup::"
        done

    - name: ðŸ“¤ Publish wheels to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      if: env.TWINE_PASSWORD != null
      run: |
        twine upload --skip-existing --verbose --repository testpypi dist/*.whl

    - name: ðŸ“¤ Publish wheels to PyPI
      if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'SymbiFlow/fasm'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*.whl

  MacAndWindows:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [ '3.6', '3.7', '3.8', '3.9', 'pypy-3.6', 'pypy-3.7' ]
      fail-fast: false

    name: ${{ matrix.python-version }} â€¢ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: '${{ github.repository }}/.github/workflows/system-setup@${{ github.sha }}'
      with:
        os: ${{ matrix.os }}
        python-version: ${{ matrix.python-version }}
        packaging-tools: true

    - name: Install package
      run: |
        pip install -e .

    - name: ðŸš§ Build distribution ðŸ“¦
      run: |
        python setup.py bdist_wheel

    - name: Check distribution ðŸ“¦
      shell: bash
      run: |
        python -m zipfile -l dist/*
        echo
        twine check dist/*

    - name: ðŸ“¤ Publish wheels to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      if: env.TWINE_PASSWORD != null
      run: |
        twine upload --skip-existing --verbose --repository testpypi dist/*.whl

    - name: ðŸ“¤ Publish wheels to PyPI
      if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'SymbiFlow/fasm'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*.whl
