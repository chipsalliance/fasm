# Copyright (C) 2017-2021  The SymbiFlow Authors.
#
# Use of this source code is governed by a ISC-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/ISC
#
# SPDX-License-Identifier: ISC

# !! WARNING !!
# Do not modify this file directly!
# !! WARNING !!
#
# It is generated from: ../workflows-src/publish-to-pypi.yml
# using the script from https://github.com/mithro/actions-includes@main

on:
  push:
  pull_request:
  workflow_dispatch:
name: PyPI
jobs:
  Source:
    name: Source
    runs-on: ubuntu-20.04
    steps:
    - uses: mithro/actions-includes@main
      if: runner.os == 'Linux'
      continue-on-error: false
      with:
        workflow: .github/workflows/publish-to-pypi.yml
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install latest pip
      run: |
        pip install -U pip
    - name: Install package's system dependencies (Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake default-jre-headless uuid-dev libantlr4-runtime-dev
    - name: Install packaging tooling
      run: |
        pip install twine auditwheel build
    - name: üß∞ Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - name: Install package
      run: |
        pip install -e .
    - name: üöß Build distribution üì¶
      run: |
        python -m build --sdist .
    - name: ‚úîÔ∏é Check üì¶
      run: |
        for WHEEL in dist/*.whl; do
          echo
          echo "::group::Checking $WHEEL"
          echo
          python -m zipfile --list $WHEEL
          echo
          auditwheel show $WHEEL
          echo
          twine check $WHEEL
          echo
          echo "::endgroup::"
        done
    - name: üì§ Publish source to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      if: ${{ env.TWINE_PASSWORD != null }}
      run: |
        twine upload --skip-existing --verbose --repository testpypi dist/*
    - name: üì§ Publish source to PyPI
      if: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'SymbiFlow/fasm' && env.TWINE_PASSWORD != null }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
  Linux:
    strategy:
      matrix:
        include:
        - python-version: '3.6'
          manylinux-python: cp36-cp36m
        - python-version: '3.7'
          manylinux-python: cp37-cp37m
        - python-version: '3.8'
          manylinux-python: cp38-cp38
        - python-version: '3.9'
          manylinux-python: cp39-cp39
      fail-fast: false
    name: ${{ matrix.python-version }} ‚Ä¢ manylinux
    runs-on: ubuntu-latest
    steps:
    - uses: mithro/actions-includes@main
      if: runner.os == 'Linux'
      continue-on-error: false
      with:
        workflow: .github/workflows/publish-to-pypi.yml
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install latest pip
      run: |
        pip install -U pip
    - name: Install packaging tooling
      run: |
        pip install twine auditwheel build
    - name: üß∞ Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - name: üöß Build distribution üì¶
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        build-requirements: cython
        pre-build-command: bash .github/workflows/manylinux-install-cmake.sh
        python-versions: ${{ matrix.manylinux-python }}
    - name: List distribution üì¶
      run: |
        # Fix permissions
        echo "::group::Fixing permission"
        ls -l dist/*
        echo $USER
        whoami
        sudo chown -R $USER dist
        ls -l dist/*
        echo "::endgroup::"
        # Remove the non-manylinux versions
        rm -v dist/*linux_x86_64*.whl
        ls -l dist/*
    - name: ‚úîÔ∏é Check üì¶
      run: |
        for WHEEL in dist/*.whl; do
          echo
          echo "::group::Checking $WHEEL"
          echo
          python -m zipfile --list $WHEEL
          echo
          auditwheel show $WHEEL
          echo
          twine check $WHEEL
          echo
          echo "::endgroup::"
        done
    - name: üì§ Publish wheels to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      if: ${{ env.TWINE_PASSWORD != null }}
      run: |
        twine upload --skip-existing --verbose --repository testpypi dist/*
    - name: üì§ Publish source to PyPI
      if: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'SymbiFlow/fasm' && env.TWINE_PASSWORD != null }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
  MacAndWindows:
    strategy:
      matrix:
        os:
        - windows-latest
        - macos-latest
        python-version:
        - '3.6'
        - '3.7'
        - '3.8'
        - '3.9'
        - pypy-3.6
        - pypy-3.7
      fail-fast: false
    name: ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: mithro/actions-includes@main
      if: runner.os == 'Linux'
      continue-on-error: false
      with:
        workflow: .github/workflows/publish-to-pypi.yml
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install latest pip
      run: |
        pip install -U pip
    - name: Install package's system dependencies (Ubuntu)
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake default-jre-headless uuid-dev libantlr4-runtime-dev
    - name: Install package's system dependencies (Mac OS X)
      if: ${{ startsWith(matrix.os, 'macos') }}
      run: |
        true
    - name: Install package's system dependencies (Windows)
      if: ${{ startsWith(matrix.os, 'windows') }}
      run: |
        true
    - name: Install packaging tooling
      run: |
        pip install twine auditwheel build
    - name: üß∞ Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - name: Install package
      run: |
        pip install -e .
    - name: üöß Build distribution üì¶
      run: |
        python setup.py bdist_wheel
    - name: ‚úîÔ∏é Check üì¶
      run: |
        for WHEEL in dist/*.whl; do
          echo
          echo "::group::Checking $WHEEL"
          echo
          python -m zipfile --list $WHEEL
          echo
          auditwheel show $WHEEL
          echo
          twine check $WHEEL
          echo
          echo "::endgroup::"
        done
    - name: üì§ Publish wheels to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      if: ${{ env.TWINE_PASSWORD != null }}
      run: |
        twine upload --skip-existing --verbose --repository testpypi dist/*
    - name: üì§ Publish source to PyPI
      if: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && github.repository == 'SymbiFlow/fasm' && env.TWINE_PASSWORD != null }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
